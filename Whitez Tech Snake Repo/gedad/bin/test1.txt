import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.animation.AnimationTimer;
import javafx.scene.input.KeyCode;
import java.util.ArrayList;
import java.util.Random;

public class App extends Application {
    private final int WIDTH = 600;
    private final int HEIGHT = 600;
    private final int GRID_SIZE = 20;
    private final int FOOD_SIZE = 15;

    private int x = 0;
    private int y = 0;
    private int xVel = 1;
    private int yVel = 0;
    private int foodX = 0;
    private int foodY = 0;

    private ArrayList<Integer> tailX = new ArrayList<>();
    private ArrayList<Integer> tailY = new ArrayList<>();

    private boolean gameOver = false;
    private Random rand = new Random();
    
    @Override
    public void start(Stage primaryStage) {
        Canvas canvas = new Canvas(WIDTH, HEIGHT);
        GraphicsContext gc = canvas.getGraphicsContext2D();

        StackPane root = new StackPane();
        root.getChildren().add(canvas);
        Scene scene = new Scene(root, WIDTH, HEIGHT);

        scene.setOnKeyPressed(e -> {
            if (e.getCode() == KeyCode.UP && yVel != 1) {
                xVel = 0;
                yVel = -1;
            } else if (e.getCode() == KeyCode.DOWN && yVel != -1) {
                xVel = 0;
                yVel = 1;
            } else if (e.getCode() == KeyCode.LEFT && xVel != 1) {
                xVel = -1;
                yVel = 0;
            } else if (e.getCode() == KeyCode.RIGHT && xVel != -1) {
                xVel = 1;
                yVel = 0;
            }
        });

        new AnimationTimer() {
            long lastUpdate = 0;

            @Override
            public void handle(long now) {
                if (now - lastUpdate >= 100_000_000) {
                    lastUpdate = now;
                    gc.setFill(Color.BLACK);
                    gc.fillRect(0, 0, WIDTH, HEIGHT);

                    if (!gameOver) {
                        if (x >= WIDTH) {
                            x = 0;
                        } else if (x < 0) {
                            x = WIDTH - GRID_SIZE;
                        }

                        if (y >= HEIGHT) {
                            y = 0;
                        } else if (y < 0) {
                            y = HEIGHT - GRID_SIZE;
                        }

                        for (int i = tailX.size() - 1; i >= 1; i--) {
                            tailX.set(i, tailX.get(i-1));
                            tailY.set(i, tailY.get(i-1));
                        }

                        if (tailX.size() > 0) {
                            tailX.set(0, x);
                            tailY.set(0, y);
                        }

                        x += xVel * GRID_SIZE;
                        y += yVel * GRID_SIZE;

                        gc.setFill(Color.RED);
                        gc.fillRect(foodX, foodY, FOOD_SIZE, FOOD_SIZE);

                        if (x == foodX && y == foodY) {
                            foodX = rand.nextInt(WIDTH - FOOD_SIZE);
                            foodY = rand.nextInt(HEIGHT - FOOD_SIZE);

                            tailX.add(0, x);
                            tailY.add(0, y);
                        }

                        gc.setFill(Color.WHITE);
                        gc.fillRect(x, y, GRID_SIZE, GRID_SIZE);

                        for (int                    i = 0; i < tailX.size(); i++) {
                            gc.fillRect(tailX.get(i), tailY.get(i), GRID_SIZE, GRID_SIZE);
                            if (tailX.get(i) == x && tailY.get(i) == y) {
                                gameOver = true;
                            }
                        }
                    } else {
                        gc.setFill(Color.WHITE);
                        gc.fillText("GAME OVER", WIDTH / 2 - 50, HEIGHT / 2);
                    }
                }
            }
        }.start();
    
        primaryStage.setTitle("Snake Game");
        primaryStage.setScene(scene);
        primaryStage.show();
    
        foodX = rand.nextInt(WIDTH - FOOD_SIZE);
        foodY = rand.nextInt(HEIGHT - FOOD_SIZE);
    }
    
    public static void main(String[] args) {
        launch(args);
    }
}    

